-- SELECT
-- 1
SELECT DEPARTMENT_NAME AS "학과명", 
       CATEGORY AS "계열"
FROM TB_DEPARTMENT;

-- 2
SELECT DEPARTMENT_NAME || '의 정원은' || CAPACITY || '명 입니다.' 
FROM TB_DEPARTMENT;

-- 3
SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE DEPARTMENT_NO = '001' AND ABSENCE_YN = 'Y';

-- 4
SELECT STUDENT_NAME 
FROM TB_STUDENT
WHERE STUDENT_NO = 'A513079' OR STUDENT_NO = 'A513090' OR STUDENT_NO = 'A513091' OR STUDENT_NO = 'A513110' OR STUDENT_NO = 'A513119'
ORDER BY STUDENT_NAME DESC;

-- 5
SELECT DEPARTMENT_NAME, CATEGORY
FROM TB_DEPARTMENT
WHERE CAPACITY BETWEEN 20 AND 30;

-- 6
SELECT PROFESSOR_NAME
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO IS NULL;

-- 7
SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE DEPARTMENT_NO IS NULL;

-- 8
SELECT CLASS_NO
FROM TB_CLASS
WHERE PREATTENDING_CLASS_NO IS NOT NULL;

-- 9
SELECT DISTINCT CATEGORY
FROM TB_DEPARTMENT
ORDER BY CATEGORY;

-- 10
SELECT  STUDENT_NO, STUDENT_NAME, STUDENT_SSN, STUDENT_ADDRESS
FROM TB_STUDENT
WHERE SUBSTR(ENTRANCE_DATE, 1, 2) = '02' AND ABSENCE_YN = 'N' AND SUBSTR(STUDENT_ADDRESS, '1', '2') = '전주';

-- Adiitional Select
-- 1.
SELECT STUDENT_NO AS "학번", STUDENT_NAME AS "이름", TO_CHAR(ENTRANCE_DATE, 'YYYY-MM-DD') AS "입학년도"
FROM TB_STUDENT
WHERE DEPARTMENT_NO = '002'
ORDER BY ENTRANCE_DATE;

-- 2.
SELECT PROFESSOR_NAME, PROFESSOR_SSN 
FROM TB_PROFESSOR
WHERE LENGTH(PROFESSOR_NAME) != '3';

-- 3.
SELECT PROFESSOR_NAME AS "교수이름", ABS('122' - SUBSTR(PROFESSOR_SSN,1,2)) AS "나이"
FROM TB_PROFESSOR
WHERE SUBSTR(PROFESSOR_SSN, 8, 1) = '1'
ORDER BY ABS('122' - SUBSTR(PROFESSOR_SSN,1,2));

-- 4
SELECT SUBSTR(PROFESSOR_NAME, 2) 
FROM TB_PROFESSOR;

-- 5
SELECT STUDENT_NO, STUDENT_NAME--, MONTHS_BETWEEN(ENTRANCE_DATE, TO_DATE(SUBSTR(STUDENT_SSN, 1, 6), 'RRMMDD'))/12
FROM TB_STUDENT
WHERE MONTHS_BETWEEN(ENTRANCE_DATE, TO_DATE(SUBSTR(STUDENT_SSN, 1, 6), 'RRMMDD'))/12 > 19
    AND MONTHS_BETWEEN(ENTRANCE_DATE, TO_DATE(SUBSTR(STUDENT_SSN, 1, 6), 'RRMMDD'))/12 <= 20;

-- 6
SELECT TO_CHAR(TO_DATE(20201225), 'DAY') FROM DUAL;

-- 7
SELECT TO_CHAR(TO_DATE('99/10/11', 'YY/MM/DD'), 'YYYY-MM-DD') FROM DUAL;
SELECT TO_CHAR(TO_DATE('49/10/11', 'YY/MM/DD'), 'YYYY-MM-DD') FROM DUAL;
SELECT TO_CHAR(TO_DATE('99/10/11', 'RR/MM/DD'), 'RRRR-MM-DD') FROM DUAL;
SELECT TO_CHAR(TO_DATE('49/10/11', 'RR/MM/DD'), 'RRRR-MM-DD') FROM DUAL;

-- 8
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
WHERE SUBSTR(STUDENT_NO, 1, 1) != 'A';

-- 9
SELECT ROUND(AVG(NVL(POINT,0)), 1)
FROM TB_GRADE
WHERE STUDENT_NO = 'A517178';

-- 10
SELECT DEPARTMENT_NO AS "학과번호", COUNT(*) AS "학생수(명)"
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO
ORDER BY DEPARTMENT_NO;
    
-- 11
SELECT COUNT(*) 
FROM TB_STUDENT
WHERE COACH_PROFESSOR_NO IS NULL;

-- 12
SELECT SUBSTR(TERM_NO, 1, 4), ROUND(AVG(POINT), 1)
FROM TB_GRADE
WHERE STUDENT_NO = 'A112113'
GROUP BY SUBSTR(TERM_NO, 1, 4)
ORDER BY SUBSTR(TERM_NO, 1, 4);

-- 13
SELECT DEPARTMENT_NO, COUNT(DECODE(ABSENCE_YN, 'Y', 'Y'))
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO
ORDER BY DEPARTMENT_NO;

-- 14
SELECT STUDENT_NAME, COUNT(*)
FROM TB_STUDENT
GROUP BY STUDENT_NAME
HAVING COUNT(*) > 1
ORDER BY STUDENT_NAME;

-- 15
SELECT NVL(SUBSTR(TERM_NO, 1, 4), ' ') AS "연도",
       NVL(SUBSTR(TERM_NO, 5, 2), ' ') AS "학기",
       ROUND(AVG(POINT), 1)
FROM TB_GRADE
WHERE STUDENT_NO = 'A112113'
GROUP BY ROLLUP (SUBSTR(TERM_NO, 1, 4), SUBSTR(TERM_NO, 5, 2));

-- Additional SELECT - Option
-- 1
SELECT STUDENT_NAME, STUDENT_ADDRESS 
FROM TB_STUDENT
ORDER BY STUDENT_NAME;

-- 2
SELECT STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE ABSENCE_YN = 'Y'
ORDER BY STUDENT_SSN DESC;

-- 3
SELECT STUDENT_NAME AS "학생이름", STUDENT_NO AS "학번", STUDENT_ADDRESS AS "거주지 주소" 
FROM TB_STUDENT
WHERE SUBSTR(STUDENT_ADDRESS, 1, 3) IN ('강원도', '경기도') AND SUBSTR(STUDENT_NO, 1, 1) != 'A'
ORDER BY STUDENT_NAME;

-- 4
SELECT PROFESSOR_NAME, PROFESSOR_SSN 
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO = '005'
ORDER BY PROFESSOR_SSN;

--5 
SELECT STUDENT_NO, TO_CHAR(POINT, '9.99') AS "POINT"
FROM TB_GRADE
WHERE CLASS_NO = 'C3118100' AND TERM_NO = '200402'
ORDER BY POINT DESC, STUDENT_NO;

-- 6
SELECT STUDENT_NO, STUDENT_NAME, TB_DEPARTMENT.DEPARTMENT_NAME
FROM TB_STUDENT
INNER JOIN TB_DEPARTMENT ON (TB_DEPARTMENT.DEPARTMENT_NO = TB_STUDENT.DEPARTMENT_NO)
ORDER BY STUDENT_NAME;

-- 7
SELECT TB_CLASS.CLASS_NAME, TB_DEPARTMENT.DEPARTMENT_NAME
FROM TB_CLASS
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO);

-- 8
SELECT TB_CLASS.CLASS_NAME, TB_PROFESSOR.PROFESSOR_NAME
FROM TB_CLASS
JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
JOIN TB_PROFESSOR USING(PROFESSOR_NO);

-- 9
SELECT TB_CLASS.CLASS_NAME, TB_PROFESSOR.PROFESSOR_NAME
FROM TB_CLASS
JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
JOIN TB_PROFESSOR USING(PROFESSOR_NO)
JOIN TB_DEPARTMENT ON (TB_DEPARTMENT.DEPARTMENT_NO = TB_PROFESSOR.DEPARTMENT_NO)
WHERE CATEGORY = '인문사회';

-- 12
SELECT
    * FROM TB_STUDENT S
    JOIN TB_GRADE G ON (S.STUDENT_NO = G.STUDENT_NO)
    JOIN TB_CLASS C ON (G.CLASS_NO = C.CLASS_NO)
    WHERE C.CLASS_NAME = '인간관계론' AND G.TERM_NO LIKE '2007%';

-- 13
SELECT C.CLASS_NAME, D.DEPARTMENT_NAME
FROM TB_DEPARTMENT D
JOIN TB_CLASS C ON (D.DEPARTMENT_NO = C.DEPARTMENT_NO)
LEFT JOIN TB_CLASS_PROFESSOR P ON (C.CLASS_NO = P.CLASS_NO)
WHERE D.CATEGORY = '예체능' AND PROFESSOR_NO IS NULL
ORDER BY 2, 1;

-- 14
SELECT S.STUDENT_NAME, NVL(P.PROFESSOR_NAME, '지도교수 미지정')
FROM TB_STUDENT S
LEFT JOIN TB_PROFESSOR P ON (S.COACH_PROFESSOR_NO = P.PROFESSOR_NO)
JOIN TB_DEPARTMENT D ON (S.DEPARTMENT_NO = D.DEPARTMENT_NO)
WHERE D.DEPARTMENT_NAME = '서반아어학과'
ORDER BY S.STUDENT_NO;

-- 15
SELECT S.STUDENT_NO, S.STUDENT_NAME, D.DEPARTMENT_NAME, ROUND(AVG(G.POINT), 8)
    FROM TB_STUDENT S
    JOIN TB_DEPARTMENT D ON (S.DEPARTMENT_NO = D.DEPARTMENT_NO)
    JOIN TB_GRADE G ON (S.STUDENT_NO = G.STUDENT_NO)
    WHERE ABSENCE_YN = 'N'
    GROUP BY S.STUDENT_NO, S.STUDENT_NAME, D.DEPARTMENT_NAME
    HAVING AVG(G.POINT) >= 4
    ORDER BY S.STUDENT_NO;
    
-- 16
SELECT C.CLASS_NO, CLASS_NAME, AVG(POINT)
    FROM TB_DEPARTMENT D, TB_CLASS C, TB_GRADE G
    WHERE G.CLASS_NO = C.CLASS_NO AND
          D.DEPARTMENT_NO = C.DEPARTMENT_NO
    AND D.DEPARTMENT_NAME = '환경조경학과' AND C.CLASS_TYPE LIKE '%전공%'
    GROUP BY C.CLASS_NAME, C.CLASS_NO;
   --17 
    SELECT STUDENT_NAME, STUDENT_ADDRESS 
    FROM TB_STUDENT
    WHERE DEPARTMENT_NO = (
        SELECT DEPARTMENT_NO
        FROM TB_STUDENT
        WHERE STUDENT_NAME = '최경희'
    );
   -- 18 
   
   
-- DDL
-- 1
CREATE TABLE TB_CATEGROY (
    NAME VARCHAR2(10),
    USE_YN CHAR(1) DEFAULT 'Y'
);

-- 2
CREATE TABLE TB_CLASS_TYPE(
    NO VARCHAR2(5),
    NAME VARCHAR2(10),
    CONSTRAINT TB_CLASS_TYPE_NO_PK PRIMARY KEY(NO)
);

-- 3
ALTER TABLE TB_CATAGORY ADD CONSTRAINT TB_CATAGORY_NAME_PK PRIMARY KEY(NAME);

-- 4
ALTER TABLE TB_CLASS_TYPE MODIFY NAME NOT NULL; 

-- 5
ALTER TABLE TB_CATAGORY MODIFY NAME VARCHAR2(20);
ALTER TABLE TB_CLASS_TYPE MODIFY NAME VARCHAR2(20);
                
-- 6
ALTER TABLE TB_CATAGORY RENAME COLUMN NAME TO CATAGORY_NAME;
ALTER TABLE TB_CLASS_TYPE RENAME COLUMN NO TO CLASS_TYPE_NO;

-- 7
ALTER TABLE TB_CATAGORY RENAME CONSTRAINT TB_CATAGORY_NAME_PK TO PK_CATAGORY_NAME;
ALTER TABLE TB_CLASS_TYPE RENAME CONSTRAINT TB_CLASS_TYPE_NO_PK TO PK_CLASSTYPE_NO;

-- 8
INSERT INTO TB_CATAGORY VALUES ('공학', 'Y');
INSERT INTO TB_CATAGORY VALUES ('자연과학', 'Y');
INSERT INTO TB_CATAGORY VALUES ('의학', 'Y');
INSERT INTO TB_CATAGORY VALUES ('예체능', 'Y');
INSERT INTO TB_CATAGORY VALUES ('인문사회', 'Y');
COMMIT;

-- 9
ALTER TABLE TB_DEPARTMENT ADD CONSTRAINT DEPARTMENT_CATAGORY_FK FOREIGN KEY(CATEGORY) REFERENCES TB_CATAGORY;

GRANT CREATE VIEW TO STUDY;

-- 10
CREATE OR REPLACE VIEW VW_학생일반정보
AS SELECT STUDENT_NO, STUDENT_NAME, STUDENT_ADDRESS
FROM TB_STUDENT
WITH READ ONLY;

-- 11
CREATE VIEW VW_지도면담
AS SELECT S.STUDENT_NAME,D.DEPARTMENT_NAME, P.PROFESSOR_NAME
FROM TB_STUDENT S
JOIN TB_DEPARTMENT D ON (S.DEPARTMENT_NO = D.DEPARTMENT_NO)
JOIN TB_PROFESSOR P ON (S.COACH_PROFESSOR_NO = P.PROFESSOR_NO)
ORDER BY D.DEPARTMENT_NAME;

-- 12
CREATE VIEW VW_학과별학생수
AS SELECT D.DEPARTMENT_NAME, COUNT(*) AS "STUDENT_COUNT"
FROM TB_STUDENT S
JOIN TB_DEPARTMENT D ON (S.DEPARTMENT_NO = D.DEPARTMENT_NO)
GROUP BY DEPARTMENT_NAME;

-- 13
UPDATE TB_STUDENT
SET STUDENT_NAME = '박노경'
WHERE STUDENT_NO = 'A213046';

-- 14

-- 15

-- DML
-- 1.
INSERT INTO TB_CLASS_TYPE VALUES('01', '전공필수');
INSERT INTO TB_CLASS_TYPE VALUES('02', '전공선택');
INSERT INTO TB_CLASS_TYPE VALUES('03', '교양필수');
INSERT INTO TB_CLASS_TYPE VALUES('04', '교양선택');
INSERT INTO TB_CLASS_TYPE VALUES('05', '논문지도');

-- 2
CREATE TABLE 학생일반정보 
AS SELECT STUDENT_NO, STUDENT_NAME, STUDENT_ADDRESS FROM TB_STUDENT;

-- 3
CREATE TABLE TB_국어국문학과
AS SELECT S.STUDENT_NO AS "학번", 
    S.STUDENT_NAME AS "학생이름", 
    TO_CHAR(SUBSTR(S.STUDENT_SSN, 1, 6), 'RRRR/MM/DD') AS "출생년도",
    S.COACH_PROFESSOR_NO AS "교수이름"
    FROM TB_STUDENT S
    JOIN TB_DEPARTMENT D ON (S.DEPARTMENT_NO = D.DEPARTMENT_NO)
    WHERE DEPARTMENT_NAME = '국어국문학과';

-- 4
UPDATE TB_DEPARTMENT
SET CAPACITY = ROUND(CAPACITY*1.1);

-- 5
UPDATE TB_STUDENT
SET STUDENT_ADDRESS = '서울시 종로구 숭인동 181-21'
WHERE STUDENT_NO = 'A413042';

-- 6
UPDATE TB_STUDENT
SET STUDENT_SSN = SUBSTR(STUDENT_SSN,1,6); 

-- 7

-- 8
DELETE FROM TB_GRADE
WHERE STUDENT_NO IN (SELECT STUDENT_NO
                    		 FROM TB_STUDENT
                    		WHERE ABSENCE_YN = 'Y');